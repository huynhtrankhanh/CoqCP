From CoqCP Require Import Options Imperative.
From stdpp Require Import numbers list strings.
Require Import Coq.Strings.Ascii.
Open Scope type_scope.
Definition environment : Environment := {| arrayType := fun name => if decide (name = String "102" (String "105" (String "098" (String "083" (String "101" (String "113" (EmptyString))))))) then Z else if decide (name = String "097" (String "110" (String "111" (String "116" (String "104" (String "101" (String "114" (String "065" (String "114" (String "114" (String "097" (String "121" (EmptyString))))))))))))) then Z * Z else if decide (name = String "118" (String "105" (String "115" (String "105" (String "116" (String "101" (String "100" (EmptyString)))))))) then bool else False; arrays := fun name => ltac:(destruct (decide (name = String "102" (String "105" (String "098" (String "083" (String "101" (String "113" (EmptyString)))))))) as [h |]; [(rewrite h; simpl; exact (repeat (0%Z) 100)) |]; destruct (decide (name = String "097" (String "110" (String "111" (String "116" (String "104" (String "101" (String "114" (String "065" (String "114" (String "114" (String "097" (String "121" (EmptyString)))))))))))))) as [h |]; [(rewrite h; simpl; exact (repeat (0%Z, 0%Z) 3)) |]; destruct (decide (name = String "118" (String "105" (String "115" (String "105" (String "116" (String "101" (String "100" (EmptyString))))))))) as [h |]; [(rewrite h; simpl; exact (repeat (false) 0)) |]; exact []) |}.
#[export] Instance arrayTypeEqualityDecidable (name : string) : EqDecision (arrayType environment name).
Proof. simpl. repeat destruct (decide _). all: solve_decision. Defined.
Definition funcdef_0_pointless (bools : string -> bool) (numbers : string -> Z) : Action (WithArrays (arrayType environment)) withArraysReturnValue unit := eliminateLocalVariables bools numbers (bind ((bind (bind (numberLocalGet (arrayType environment) (String "112" (String "114" (String "101" (String "115" (String "101" (String "116" (EmptyString)))))))) (fun x => Done _ _ _ (coerceInt8 x))) (fun x => writeChar (arrayType environment) x))) (fun ignored => Done _ _ _ tt)).
Definition funcdef_0_more (bools : string -> bool) (numbers : string -> Z) : Action (WithArrays (arrayType environment)) withArraysReturnValue unit := eliminateLocalVariables bools numbers (bind (Done _ _ _ tt) (fun ignored => Done _ _ _ tt)).
Definition funcdef_0_fibonacci (bools : string -> bool) (numbers : string -> Z) : Action (WithArrays (arrayType environment)) withArraysReturnValue unit := eliminateLocalVariables bools numbers (bind (bind (bind (bind (bind (bind (bind (bind (bind (bind (bind (bind (bind (bind (bind (bind (bind ((bind (readChar (arrayType environment)) (fun x => numberLocalSet (arrayType environment) (String "110" (EmptyString)) x))) (fun ignored => (bind (Done _ _ _ 0%Z) (fun x => numberLocalSet (arrayType environment) (String "097" (EmptyString)) x)))) (fun ignored => (bind (Done _ _ _ 1%Z) (fun x => numberLocalSet (arrayType environment) (String "098" (EmptyString)) x)))) (fun ignored => (bind (Done _ _ _ 0%Z) (fun x => bind (bind (numberLocalGet (arrayType environment) (String "097" (EmptyString))) (fun tuple_element_0 => Done _ _ _ (tuple_element_0))) (fun y => store (arrayType environment) (String "102" (String "105" (String "098" (String "083" (String "101" (String "113" (EmptyString))))))) x ltac:(simpl in *; exact y)))))) (fun ignored => (bind (Done _ _ _ 1%Z) (fun x => bind (bind (numberLocalGet (arrayType environment) (String "098" (EmptyString))) (fun tuple_element_0 => Done _ _ _ (tuple_element_0))) (fun y => store (arrayType environment) (String "102" (String "105" (String "098" (String "083" (String "101" (String "113" (EmptyString))))))) x ltac:(simpl in *; exact y)))))) (fun ignored => (bind (subInt64 (bind (numberLocalGet (arrayType environment) (String "110" (EmptyString))) (fun x => Done _ _ _ (coerceInt64 x))) (Done _ _ _ 2%Z)) (fun x => loop (Z.to_nat x) (fun binder_0_intermediate => let binder_0 := Done _ _ _ (Z.sub (Z.sub x (Z.of_nat binder_0_intermediate)) 1%Z) in bind (bind (bind (bind (bind ((bind (addInt32 (let x := bind binder_0 (fun x => retrieve (arrayType environment) (String "102" (String "105" (String "098" (String "083" (String "101" (String "113" (EmptyString))))))) x) in ltac:(simpl in *; exact x)) (let x := bind (addInt64 binder_0 (Done _ _ _ 1%Z)) (fun x => retrieve (arrayType environment) (String "102" (String "105" (String "098" (String "083" (String "101" (String "113" (EmptyString))))))) x) in ltac:(simpl in *; exact x))) (fun x => numberLocalSet (arrayType environment) (String "105" (EmptyString)) x))) (fun ignored => (bind (addInt64 binder_0 (Done _ _ _ 2%Z)) (fun x => bind (bind (numberLocalGet (arrayType environment) (String "105" (EmptyString))) (fun tuple_element_0 => Done _ _ _ (tuple_element_0))) (fun y => store (arrayType environment) (String "102" (String "105" (String "098" (String "083" (String "101" (String "113" (EmptyString))))))) x ltac:(simpl in *; exact y)))))) (fun ignored => (Done _ _ _ Stop))) (fun ignored => (Done _ _ _ KeepGoing))) (fun ignored => (flush (arrayType environment)))) (fun ignored => Done _ _ _ KeepGoing)))))) (fun ignored => (divIntUnsigned (Done _ _ _ 2%Z) (Done _ _ _ 3%Z)))) (fun ignored => (divInt64Signed (Done _ _ _ 1%Z) (Done _ _ _ 2%Z)))) (fun ignored => (divIntUnsigned (readChar (arrayType environment)) (bind (Done _ _ _ 3%Z) (fun x => Done _ _ _ (coerceInt8 x)))))) (fun ignored => (divInt8Signed (readChar (arrayType environment)) (readChar (arrayType environment))))) (fun ignored => (bind (bind (Done _ _ _ (fun x => 0%Z)) (fun x => bind (Done _ _ _ 100%Z) (fun y => Done _ _ _ (update x (String "112" (String "114" (String "101" (String "115" (String "101" (String "116" (EmptyString))))))) y)))) (fun x => bind (Done _ _ _ (fun x => false)) (fun y => funcdef_0_pointless y x))))) (fun ignored => (bind (Done _ _ _ (fun x => 0%Z)) (fun x => bind (Done _ _ _ (fun x => false)) (fun y => funcdef_0_pointless y x))))) (fun ignored => (bind (bind (bind (Done _ _ _ (fun x => 0%Z)) (fun x => bind (readChar (arrayType environment)) (fun y => Done _ _ _ (update x (String "097" (EmptyString)) y)))) (fun x => bind (readChar (arrayType environment)) (fun y => Done _ _ _ (update x (String "099" (EmptyString)) y)))) (fun x => bind (Done _ _ _ (fun x => false)) (fun y => funcdef_0_more y x))))) (fun ignored => (bind (bind (bind (Done _ _ _ (fun x => 0%Z)) (fun x => bind (bind (Done _ _ _ 0%Z) (fun x => Done _ _ _ (coerceInt8 x))) (fun y => Done _ _ _ (update x (String "097" (EmptyString)) y)))) (fun x => bind (bind (Done _ _ _ 0%Z) (fun x => Done _ _ _ (coerceInt8 x))) (fun y => Done _ _ _ (update x (String "099" (EmptyString)) y)))) (fun x => bind (Done _ _ _ (fun x => false)) (fun y => funcdef_0_more y x))))) (fun ignored => (bind (bind (numberLocalGet (arrayType environment) (String "110" (EmptyString))) (fun x => bind (Done _ _ _ 100%Z) (fun y => Done _ _ _ (bool_decide (x = y))))) (fun x => if x then (bind (Done _ _ _ 32%Z) (fun x => writeChar (arrayType environment) x)) else (bind (Done _ _ _ 64%Z) (fun x => writeChar (arrayType environment) x)))))) (fun ignored => (bind (shortCircuitOr (bind (numberLocalGet (arrayType environment) (String "110" (EmptyString))) (fun a => bind (Done _ _ _ 200%Z) (fun b => bool_decide (a < b)))) (shortCircuitAnd (Done _ _ _ true) (bind (Done _ _ _ false) (fun x => negb x)))) (fun x => if x then (bind (Done _ _ _ 100%Z) (fun x => writeChar (arrayType environment) x)) else Done _ _ _ tt)))) (fun ignored => (bind (shortCircuitAnd (bind (addInt8 (readChar (arrayType environment)) (readChar (arrayType environment))) (fun a => bind (bind (Done _ _ _ 3%Z) (fun x => Done _ _ _ (coerceInt8 x))) (fun b => bool_decide (a < b)))) (bind (readChar (arrayType environment)) (fun a => bind (readChar (arrayType environment)) (fun b => bool_decide (toSigned8 a < toSigned8 b))))) (fun x => if x then Done _ _ _ tt else Done _ _ _ tt)))) (fun ignored => Done _ _ _ tt)).
